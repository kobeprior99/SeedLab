Purpose: EENG 350: System, Exploration, Engineering, and Design Lab
Project Goal: Produce an atonomous robot that moves according to arrows and ArUco markers 
Group: 14
Members: Kobe Prior, Blane Miller, Ron Gaines, Cooper Hammond

***
Directory Navigation:
Project Deliverables will be found in their respective category, for example if you want the MiniProject computer vision code navigate to the MiniProject/Computer_Vision. If you want Demo1 computer vision code, similarly: Demo1/Computer_Vision, etc.

***
Guidlines and Tips
-Using GitHub: Download GitHub Desktop as well as add github extension to VScode, need help ask Kobe

-Enable AutoFetch so current repo is accessible locally: "file>Preferences>settings" then search "Git: Auto Fetch and toggle it on"

-if you want to pull the current codebase and know multiple people have been using the repo use git pull --rebase

-When you've made changes stage the changes with the plus button and commit leaving a message about what you changed

-Please produce well commented code for project implementation. 

-Develop code however you want but be sure it is commented well when it will be used by the group

-Try to have as much fun as possible

-Need new eyes on your code ask on snap if anyone is willing to help but give a good college try first

-Important deliverables deadlines will be filled in on TEAMS calendar -> we can explore with using gannt charts with dependencies if you guys want to as well

-The use of generative AI is only banned for reflection logs and discussions. Use GenAI to speed up coding and research. VS code as free copilot available and you can tab lines and lines of code to save a bunch of time. ChatGPT also an option

-using git on pi: 
cloning the repository, in the command line I typed "git clone <repo>" where <repo> is the web url for the repository. This brought up a menu that asked for authentication, e.g., github username and password
The password authentication was disabled by github a while back so I had to look up YouTube videos on how to get around this 
You need to set up an access token. While in GitHub >settings>developer settings>personal access tokens>Tokens classic> then following the prompts you can create an access token which is a really long string of characters including numbers and letters and special characters. 
using this token where you would type your password when cloning the Repo worked and I had access to the repository
I then noticed that you had to enter this authentication token every time you pushed and pulled from the repository which was super annoying. 

5. The fix for having to re-enter is the following: 

in the terminal in the directory of the repository you cloned type: "git remote set-url origin https://<token>@github.com/<username>/<repo>"

where you enter the token in the <token spot>, your username in the <username>, and so on. This allowed me to push and pull without re-authenticating every time. 