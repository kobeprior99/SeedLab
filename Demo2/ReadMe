Computer Visions: 
find the angle, distance, and arrow and relay this data to the controls system
## Directory: Computer_Vision

### Files and Descriptions
- **arrow.py**: Development of angle detection to be utilized in Demo 2.
- **calibration.pkl**: Copy of the calibration file from Demo 1 for camera calibration.
- **chatdist.py**: ChatGPT-aided program that uses tvecs to compute the distance to a marker rather than using the similar triangle approach.
- **Demo2**: Project code that processes data about the ArUco marker (distance, angle, and arrow) and packages it to be sent to the Arduino and LCD screen.
- **distance.py**: Implements the similar triangles approach to compute the distance to a marker.
- **leftarrow.png**: Beacon image to be printed.
- **projectBoard.txt**: Description of individual and joint tasks.
- **rightarrow.png**: Beacon image to be printed.
- **test_float_pack**: Supplementary file for Demo 2 to ensure proper packing of floats for I2C communication.
## Directory: Test_Send
### Files and Descriptions
- **Test_Send.ino**: Tests the functionality of sending data via I2C from Raspberry Pi to Arduino.

Controls and Localizaiton:
Design an FSM that takes computer vision parameters as flags to switch between states. See Demo2/Control/FSM.jpg
files and descriptions: 
## Directory: Control
### Files
- **FSM.JPG** shows ideation for FSM
- **Revised_FSM** shows a revised FSM with less states that was used in the program
## Directory: Demo2
### Files
- **Demo2.ino** Robot control system for sweeping, identifying, and driving towards a marker.
 *        The robot stops and reads within 1.5 feet, then either stays or turns 90 degrees based on instructions.